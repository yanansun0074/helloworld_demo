name: Test and Deploy to GitHub Pages

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.set-result.outputs.result }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Run tests
        id: run-tests
        run: |
          npm test || echo "TEST_FAILED" > test_status.txt

      - name: Set test result
        id: set-result
        run: |
          if [ -f test_status.txt ]; then
            echo "result=failed" >> $GITHUB_OUTPUT
          else
            echo "result=passed" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: test
    if: needs.test.outputs.result == 'passed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Deploy to GitHub Pages
        run: npm run deploy
  
      - name: Set deploy result
        id: set-status
        run: echo "deployed=true" >> $GITHUB_OUTPUT

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "${{ 
                needs.test.outputs.result == 'failed' 
                && ':x: Deployment failed: Tests did not pass.' 
                || (
                  needs.deploy.outputs.deployed == 'true'
                  && ':white_check_mark: Deployment succeeded! Visit: https://yanansun0074.github.io/helloworld_demo>'
                  || ':grey_question: Deployment was skipped or failed unexpectedly.'
                )
              }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
